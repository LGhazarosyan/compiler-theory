Program = [DataSegment] CodeSegment {CodeSegment}

DataSegment = 'DATA SEGMENT: \n' {Definitions} SegmentTerminator
Definitions =  Type Ident '=' Constant '\n'

CodeSegment = 'CODE SEGMENT: \n' SubProgram {SubProgram} SegmentTerminator
SubProgram = Label '\nBEGIN' {Statement} 'END\n'
Statement = (FunctionCall | PushCommand | PopCommand | BuildinCommand | RetExpr | Label) '\n'
Label = Ident ':'
FunctionCall = 'CALL' Ident
PushCommand = 'PUSH' Expr
PopCommand = 'POP' | 'POP' IDENT
RetExpr = 'RET' | 'RET' Expr {, Expr}
BuildinCommand = 'ADD' | 'SUB' | 'MUL' | 'DIV'
		| 'JMP' Ident | 'JMPZ' Ident
		| 'CMP' | 'CMPG' | 'CMPNE' | 'CMPGE' | 'CMPL' | 'CMPLE'
		| 'AND' | 'OR' | 'XOR' | 'NOT'
		| 'INPUT' 
		| 'PRINT'
		| 'INC'
		| 'DEC'
		| 'CP' | 'CP' Ident | 'CP' Constant

Expr = Ident | Constant
Constant = Char | Integer
SegmentTerminator = 'END SEGMENT\n'
Type = 'BYTE'


# Regex expressions for terminal symbols
Char = .*
Integer = -?[1-9][0-9]*
WordCharacter = [a-zA-Z_-]
Ident = WordCharacter{(WordCharacter|'[0-9]')*}
